swagger: '2.0'
info:
  title: Farztev admin API
  description: Manage Farztev
  version: "1.0.0"
host: localhost
schemes:
  - https
basePath: /
produces:
  - application/json
parameters:
  CountryId:
    name: countryId
    in: path
    type: integer
    format: int64
    description: Country ID
    required: true
  Country:
    name: country
    in: body
    description: Country data.
    required: true
    schema:
      $ref: '#/definitions/Country'
  ArticleId:
    name: articleId
    in: path
    type: integer
    format: int64
    description: Article ID
    required: true
  Article:
    name: article
    in: body
    description: Article data.
    required: true
    schema:
      $ref: '#/definitions/Article'
  AlbumId:
    name: albumId
    in: path
    type: integer
    format: int64
    description: Album ID
    required: true
  Album:
    name: album
    in: body
    description: Album data.
    required: true
    schema:
      $ref: '#/definitions/Album'
  AlbumTypeId:
    name: albumTypeId
    in: path
    type: integer
    format: int64
    description: Album Type ID
    required: true
  AlbumType:
    name: albumType
    in: body
    description: Album Type data.
    required: true
    schema:
      $ref: '#/definitions/AlbumType'
  MediaId:
    name: mediaId
    in: path
    type: integer
    format: int64
    description: Media ID
    required: true
  Media:
    name: media
    in: body
    description: Media data.
    required: true
    schema:
      $ref: '#/definitions/Media'
paths:
  /api/article:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ListArticle"
        400:
          description: "Invalid status value"
    post:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/Article'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Article"
        400:
          description: "Invalid status value"
  /api/article/{articleId}:
    get:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/ArticleId'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Article"
        404:
          description: "Article not found"
    put:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/ArticleId'
        - $ref: '#/parameters/Article'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Article"
        400:
          description: "Invalid status value"
    delete:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/ArticleId'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /api/country:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ListCountry"
      400:
        description: "Invalid status value"
    post:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/Country'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Country"
        400:
          description: "Invalid status value"
  /api/country/{countryId}:
    get:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/CountryId'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Country"
        404:
          description: "Country not found"
    put:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/CountryId'
        - $ref: '#/parameters/Country'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Country"
        400:
          description: "Invalid status value"
    delete:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/CountryId'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /api/album:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ListAlbum"
      400:
        description: "Invalid status value"
    post:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/Album'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Album"
        400:
          description: "Invalid status value"
  /api/album/{albumId}:
    get:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Album"
        404:
          description: "Country not found"
    put:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
        - $ref: '#/parameters/Album'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Album"
        400:
          description: "Invalid status value"
    delete:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /api/albumtype:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ListAlbumType"
      400:
        description: "Invalid status value"
    post:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumType'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AlbumType"
        400:
          description: "Invalid status value"
  /api/albumtype/{albumTypeId}:
    get:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumTypeId'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AlbumType"
        404:
          description: "Country not found"
    put:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumTypeId'
        - $ref: '#/parameters/AlbumType'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AlbumType"
        400:
          description: "Invalid status value"
    delete:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumTypeId'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
  /api/album/{albumId}/media:
    get:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ListMedia"
      400:
        description: "Invalid status value"
    post:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
        - $ref: '#/parameters/Media'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Media"
        400:
          description: "Invalid status value"
  /api/album/{albumId}/media/{mediaId}:
    get:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
        - $ref: '#/parameters/MediaId'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Media"
        404:
          description: "Country not found"
    put:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
        - $ref: '#/parameters/MediaId'
        - $ref: '#/parameters/Media'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Media"
        400:
          description: "Invalid status value"
    delete:
      produces:
      - "application/json"
      parameters:
        - $ref: '#/parameters/AlbumId'
        - $ref: '#/parameters/MediaId'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid status value"
definitions:
  ListArticle:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      country:
        type: "string"
        example: "fr"
      name:
        type: "string"
        example: "Visit in Dublin"
      photo:
        type: "string"
        example: "dublin.jpg"
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      countryId:
        type: "integer"
        format: "int64"
        example: 1
      countryName:
        type: "string"
        example: Ireland
      online:
        type: "boolean"
        example: true
  Article:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      countryId:
        type: "integer"
        format: "int64"
        example: 1
      countryName:
        type: "string"
        example: Ireland
      name:
        type: "string"
        example: "Visit in Dublin"
      photo:
        type: "string"
        example: "dublin.jpg"
      description:
        type: "string"
        example: "Dublin is the capital of Irland..."
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      online:
        type: "boolean"
        example: true
  ListCountry:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 10
      name:
        type: "string"
        example: "Espagne"
      abbreviation:
        type: "string"
        example: "ES"
      beginning:
        type: "string"
        format: "date"
        example: "Blablabla"
      ending:
        type: "string"
        format: "date"
        example: "Blablabla"
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      online:
        type: "boolean"
        example: true
      continent:
        type: "string"
        example: "ASIA"
  Country:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 10
      name:
        type: "string"
        example: "Espagne"
      abbreviation:
        type: "string"
        example: "es"
      description:
        type: "string"
        example: "Blablabla"
      trip:
        type: "string"
        example: "Blablabla"
      why:
        type: "string"
        example: "Blablabla"
      favorite:
        type: "string"
        example: "Blablabla"
      conclusion:
        type: "string"
        example: "Blablabla"
      beginning:
        type: "string"
        format: "date"
        example: "Blablabla"
      ending:
        type: "string"
        format: "date"
        example: "Blablabla"
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      online:
        type: "boolean"
        example: true
      continent:
        type: "string"
        example: "ASIA"
  ListAlbum:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "Patong"
      description:
        type: "string"
        example: "Patong is the most famous place of Phuket..."
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      thumbnail:
        type: "integer"
        example: "68"
      countryId:
        type: "integer"
        format: "int64"
        example: 1
      countryName:
        type: "string"
        example: Ireland
      albumTypeId:
        type: "integer"
        format: "int64"
        example: 1
      albumTypeName:
        type: "string"
        example: Zug canton
      online:
        type: "boolean"
        example: true
  Album:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "Patong"
      description:
        type: "string"
        example: "Patong is the most famous place of Phuket..."
      countryId:
        type: "integer"
        format: "int64"
        example: 1
      countryName:
        type: "string"
        example: Ireland
      albumTypeId:
        type: "integer"
        format: "int64"
        example: 1
      albumTypeName:
        type: "string"
        example: Zug canton
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      online:
        type: "boolean"
        example: true
  ListAlbumType:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "Patong"
      countryId:
        type: "integer"
        format: "int64"
        example: 1
      countryName:
        type: "string"
        example: Ireland
  AlbumType:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "Patong"
      countryId:
        type: "integer"
        format: "int64"
        example: 1
      countryName:
        type: "string"
        example: Ireland
  ListMedia:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "Patong"
      type:
        type: "string"
        example: "PHOTO"
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      url:
        type: "string"
        example: "/1/1.jpg"
      online:
        type: "boolean"
        example: true
  Media:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "Patong"
      type:
        type: "string"
        example: "PHOTO"
      created:
        type: "string"
        format: "date"
        example: "Blablabla"
      updated:
        type: "string"
        format: "date"
        example: "Blablabla"
      url:
        type: "string"
        example: "/1/1.jpg"
      online:
        type: "boolean"
        example: true
      albumId:
        type: "integer"
        format: "int64"
        example: 1
      albumName:
        type: "string"
        example: Ireland
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"